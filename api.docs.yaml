openapi: 3.0.0
info:
  title: Income Tracker API
  version: 1.0.0
  description: API pour gérer l'authentification et les revenus des utilisateurs.
servers:
  - url: http://localhost:8080/api

paths:
  /auth/sign:
    post:
      summary: Créer un compte utilisateur
      tags: 
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  example: testtest@gmail.com
                password:
                  type: string
                  example: "1234"
      responses:
        "201":
          description: Utilisateur créé avec succès
        "400":
          description: Requête invalide

  /auth/login:
    post:
      summary: Connexion d'un utilisateur
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  example: testtest@gmail.com
                password:
                  type: string
                  example: "1234"
      responses:
        "200":
          description: Authentification réussie (retourne un token JWT)
        "401":
          description: Identifiants invalides

  /income:
    post:
      summary: Créer un revenu
      security:
        - bearerAuth: []
      tags:
        - Income
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [amount, date, source]
              properties:
                amount:
                  type: number
                  example: 1500
                date:
                  type: string
                  format: date
                  example: 2025-08-19
                source:
                  type: string
                  example: Freelance
                description:
                  type: string
                  example: Projet X
      responses:
        "201":
          description: Revenu créé avec succès
        "401":
          description: Non autorisé

    get:
      summary: Lister tous les revenus de l’utilisateur
      security:
        - bearerAuth: []
      tags:
        - Income
      responses:
        "200":
          description: Liste des revenus
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Income"
        "401":
          description: Non autorisé

  /income/{id}:
    get:
      summary: Obtenir un revenu par ID
      security:
        - bearerAuth: []
      tags:
        - Income
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Revenu trouvé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Income"
        "404":
          description: Revenu non trouvé

    put:
      summary: Mettre à jour un revenu
      security:
        - bearerAuth: []
      tags:
        - Income
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 2000
                description:
                  type: string
                  example: Projet X mis à jour
      responses:
        "200":
          description: Revenu mis à jour
        "404":
          description: Revenu non trouvé

    delete:
      summary: Supprimer un revenu
      security:
        - bearerAuth: []
      tags:
        - Income
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Revenu supprimé avec succès
        "404":
          description: Revenu non trouvé

  /expenses:
    post:
      summary: Créer une dépense
      security:
        - bearerAuth: []
      tags:
        - Expense
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                amount:
                  type: number
                expense_date:
                  type: string
                  format: date
                category_name:
                  type: string
                description:
                  type: string
                is_recurrent:
                  type: boolean
                start_date:
                  type: string
                  format: date
                end_date:
                  type: string
                  format: date
                receipt_image:
                  type: string
                  format: binary
      responses:
        "201":
          description: La dépense créée
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Expense"
        "400":
          description: Erreur dans la requête
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"

    get:
      summary: Obtenir toutes les dépenses
      security:
        - bearerAuth: []
      tags:
        - Expense
      parameters:
        - name: start
          in: query
          schema:
            type: string
            format: date
          description: Date minimale
        - name: end
          in: query
          schema:
            type: string
            format: date
          description: Date maximale
        - name: category
          in: query
          schema:
            type: string
          description: Catégorie de la dépense
        - name: is_recurrent
          in: query
          schema:
            type: string
          description: Si la dépense est récurrente ("true"/"false")
      responses:
        "200":
          description: Liste des dépenses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Expense"

  /expenses/{id}:
    get:
      summary: Obtenir une dépense par ID
      security:
        - bearerAuth: []
      tags:
        - Expense
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Une dépense
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Expense"
        "404":
          description: Dépense non trouvée

    put:
      summary: Mettre à jour une dépense
      security:
        - bearerAuth: []
      tags:
        - Expense
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                amount:
                  type: number
                expense_date:
                  type: string
                  format: date
                category_name:
                  type: string
                description:
                  type: string
                is_recurrent:
                  type: boolean
                start_date:
                  type: string
                  format: date
                end_date:
                  type: string
                  format: date
                receipt_image:
                  type: string
                  format: binary
      responses:
        "200":
          description: Dépense mise à jour
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Expense"
        "404":
          description: Dépense non trouvée

    delete:
      summary: Supprimer une dépense
      security:
        - bearerAuth: []
      tags:
        - Expense
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Dépense supprimée

  /categories:
    get:
      summary: Lister toutes les catégories (utilisateur + par défaut)
      security:
        - bearerAuth: []
      tags:
        - Category
      responses:
        "200":
          description: Liste des catégories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"

    post:
      summary: Créer une catégorie pour l'utilisateur
      security:
        - bearerAuth: []
      tags:
        - Category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
      responses:
        "201":
          description: Catégorie créée
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"

  /categories/{id}:
    put:
      summary: Mettre à jour une catégorie
      security:
        - bearerAuth: []
      tags:
        - Category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
      responses:
        "200":
          description: Catégorie mise à jour
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"

    delete:
      summary: Supprimer une catégorie
      security:
        - bearerAuth: []
      tags:
        - Category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Catégorie supprimée

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Income:
      type: object
      properties:
        id:
          type: string
          format: uuid
        amount:
          type: number
          example: 1500
        income_date:
          type: string
          format: date
          example: 2025-08-19
        source:
          type: string
          example: Freelance
        description:
          type: string
          example: Projet X

    Expense:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type: string
        amount:
          type: number
        expense_date:
          type: string
          format: date
        category_id:
          type: string
          format: uuid
        receipt_id:
          type: string
          format: uuid
        is_recurrent:
          type: boolean
        category_name:
          type: string
          description: Name of the category (used for create/update)
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date

    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        is_default:
          type: boolean
        created_at:
          type: string
          format: date-time

    ErrorMessage:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
